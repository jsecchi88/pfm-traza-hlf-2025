{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 192, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/src/lib/mockData.ts"],"sourcesContent":["\nimport { Role, type GrapeLot, type WineBatch, type Transfer } from '@/types';\nimport { faker } from '@faker-js/faker';\nimport { MOCK_USERS } from './constants';\n\nconst generateId = (prefix: string) => `${prefix}-${faker.string.alphanumeric(4).toUpperCase()}`;\n\nconst viticultores = MOCK_USERS[Role.Viticultor];\nconst bodegas = MOCK_USERS[Role.Bodega];\nconst distribuidores = MOCK_USERS[Role.Distribuidor];\nconst minoristas = MOCK_USERS[Role.Minorista];\nconst consumidores = MOCK_USERS[Role.Consumidor];\n\nexport const mockGrapeLots: GrapeLot[] = Array.from({ length: 5 }).map((_, i) => {\n  const viticultor = viticultores[i % viticultores.length];\n  const variety = faker.helpers.arrayElement(['Malbec', 'Cabernet Sauvignon', 'Chardonnay', 'Merlot']);\n  return {\n    id: generateId('GRAPE'),\n    name: `Cosecha ${variety} ${new Date().getFullYear()} - Lote ${i + 1}`,\n    grapeVariety: variety,\n    parcelData: `Parcela ${faker.number.int({ min: 1, max: 20 })}, Finca ${viticultor.name}`,\n    inputsUsed: `Riego por goteo, fertilizantes orgánicos.`,\n    viticultorId: viticultor.id,\n    harvestDate: faker.date.past().toISOString(),\n    registrationDate: new Date().toISOString(),\n    imageUrl: `https://placehold.co/600x400.png?text=${encodeURIComponent(`Uva ${variety}`)}`,\n  };\n});\n\nexport const mockWineBatches: WineBatch[] = [];\nexport const mockTransfers: Transfer[] = [];\n\n// Create transfers for Grapes from Viticultor to Bodega, and then create WineBatches\nmockGrapeLots.forEach((grapeLot, i) => {\n  if (i < 3) { // Only some lots get transferred and processed initially\n    const viticultor = viticultores.find(v => v.id === grapeLot.viticultorId);\n    const bodega = bodegas[i % bodegas.length];\n    if (viticultor && bodega) {\n      // 1. Transfer Grapes to Bodega\n      const grapeTransfer: Transfer = {\n        id: generateId('TR'),\n        assetId: grapeLot.id,\n        assetName: grapeLot.name,\n        assetType: \"GrapeLot\",\n        fromUserId: viticultor.id,\n        fromRole: Role.Viticultor,\n        toUserId: bodega.id,\n        toRole: Role.Bodega,\n        status: \"accepted\",\n        requestDate: faker.date.between({ from: grapeLot.harvestDate, to: new Date() }).toISOString(),\n        actionDate: new Date().toISOString(),\n        quantity: faker.number.int({ min: 500, max: 2000 }),\n      };\n      mockTransfers.push(grapeTransfer);\n\n      // 2. Bodega creates Wine from the Grapes\n      const wineBatch: WineBatch = {\n        id: generateId('WINE'),\n        name: `Reserva ${grapeLot.grapeVariety} ${new Date().getFullYear()}`,\n        grapeLotIds: [grapeLot.id],\n        bodegaId: bodega.id,\n        productionDetails: `Fermentado en tanques de acero inoxidable. Crianza de 12 meses en barricas de roble francés.`,\n        chemicalAnalysis: `pH: ${faker.number.float({ min: 3.2, max: 3.8, precision: 0.1 })}, Alcohol: ${faker.number.float({ min: 13.0, max: 14.5, precision: 0.1 })}%`,\n        bottlingDate: new Date().toISOString(),\n        registrationDate: new Date().toISOString(),\n        imageUrl: `https://placehold.co/600x400.png?text=${encodeURIComponent(`Vino ${grapeLot.grapeVariety}`)}`,\n      };\n      mockWineBatches.push(wineBatch);\n      \n      // 3. Transfer Wine from Bodega to Distribuidor\n      const distribuidor = distribuidores[i % distribuidores.length];\n      if (distribuidor) {\n          const wineTransfer: Transfer = {\n              id: generateId('TR'),\n              assetId: wineBatch.id,\n              assetName: wineBatch.name,\n              assetType: \"WineBatch\",\n              fromUserId: bodega.id,\n              fromRole: Role.Bodega,\n              toUserId: distribuidor.id,\n              toRole: Role.Distribuidor,\n              status: \"accepted\",\n              requestDate: new Date().toISOString(),\n              actionDate: new Date().toISOString(),\n              quantity: faker.number.int({ min: 100, max: 500 }),\n          };\n          mockTransfers.push(wineTransfer);\n\n          // 4. Transfer Wine from Distribuidor to Minorista\n          const minorista = minoristas[i % minoristas.length];\n          if(minorista){\n             const retailTransfer: Transfer = {\n                id: generateId('TR'),\n                assetId: wineBatch.id,\n                assetName: wineBatch.name,\n                assetType: \"WineBatch\",\n                fromUserId: distribuidor.id,\n                fromRole: Role.Distribuidor,\n                toUserId: minorista.id,\n                toRole: Role.Minorista,\n                status: \"accepted\",\n                requestDate: new Date().toISOString(),\n                actionDate: new Date().toISOString(),\n                quantity: faker.number.int({ min: 10, max: 50 }),\n            };\n            mockTransfers.push(retailTransfer);\n\n            // 5. \"Sell\" wine to a consumer\n            const consumidor = consumidores[i % consumidores.length];\n            if(consumidor){\n               const consumerSale: Transfer = {\n                  id: generateId('TR'),\n                  assetId: wineBatch.id,\n                  assetName: wineBatch.name,\n                  assetType: \"WineBatch\",\n                  fromUserId: minorista.id,\n                  fromRole: Role.Minorista,\n                  toUserId: consumidor.id,\n                  toRole: Role.Consumidor,\n                  status: \"accepted\",\n                  requestDate: new Date().toISOString(),\n                  actionDate: new Date().toISOString(),\n                  quantity: faker.number.int({min: 1, max: 3}),\n              };\n              mockTransfers.push(consumerSale);\n            }\n          }\n      }\n    }\n  }\n});\n\n\n// Helper function to get assets for a user\nexport const getAssetsForUser = (userId: string, role: Role): (GrapeLot | WineBatch)[] => {\n  switch (role) {\n    case Role.Viticultor:\n      return mockGrapeLots.filter(gl => gl.viticultorId === userId);\n    case Role.Bodega:\n      const bodegaWines = mockWineBatches.filter(wb => wb.bodegaId === userId);\n      const acceptedGrapeLotIds = mockTransfers\n        .filter(t => t.toUserId === userId && t.toRole === Role.Bodega && t.status === 'accepted' && t.assetType === 'GrapeLot')\n        .map(t => t.assetId);\n      const acceptedGrapeLots = mockGrapeLots.filter(gl => acceptedGrapeLotIds.includes(gl.id));\n      return [...bodegaWines, ...acceptedGrapeLots];\n    case Role.Distribuidor:\n    case Role.Minorista:\n      const acceptedWineIds = mockTransfers\n        .filter(t => t.toUserId === userId && t.toRole === role && t.status === 'accepted' && t.assetType === 'WineBatch')\n        .map(t => t.assetId);\n      return mockWineBatches.filter(wb => acceptedWineIds.includes(wb.id));\n    default:\n      return [];\n  }\n};\n\n// Helper function to get wine trace\nexport const getWineTrace = (wineId: string): import('@/types').WineTraceEvent[] => {\n  const trace: import('@/types').WineTraceEvent[] = [];\n  const wineBatch = mockWineBatches.find(p => p.id === wineId);\n\n  if (!wineBatch) return [];\n  \n  const bodega = MOCK_USERS[Role.Bodega].find(f => f.id === wineBatch.bodegaId);\n  trace.push({\n    timestamp: wineBatch.registrationDate,\n    event: \"Vino Registrado por Bodega\",\n    actor: `${Role.Bodega} - ${bodega?.name || wineBatch.bodegaId}`,\n    assetId: wineBatch.id,\n    details: `Vino: ${wineBatch.name}. Detalles: ${wineBatch.productionDetails}. Embotellado: ${new Date(wineBatch.bottlingDate).toLocaleDateString()}`,\n  });\n\n  wineBatch.grapeLotIds.forEach(glId => {\n    const grapeLot = mockGrapeLots.find(gl => gl.id === glId);\n    if (grapeLot) {\n      const viticultor = MOCK_USERS[Role.Viticultor].find(p => p.id === grapeLot.viticultorId);\n      trace.push({\n        timestamp: grapeLot.harvestDate,\n        event: \"Cosecha de Uva Registrada\",\n        actor: `${Role.Viticultor} - ${viticultor?.name || grapeLot.viticultorId}`,\n        assetId: glId,\n        details: `Lote: ${grapeLot.name}. Variedad: ${grapeLot.grapeVariety}. Parcela: ${grapeLot.parcelData}`,\n      });\n      \n      const grapeTransfer = mockTransfers.find(t => \n        t.assetId === glId && \n        t.toUserId === wineBatch.bodegaId &&\n        t.status === \"accepted\"\n      );\n      if (grapeTransfer) {\n        trace.push({\n          timestamp: grapeTransfer.actionDate || grapeTransfer.requestDate,\n          event: \"Lote de Uva Transferido a Bodega\",\n          actor: `De ${viticultor?.name} a ${bodega?.name}`,\n          assetId: glId,\n          details: `Cantidad: ${grapeTransfer.quantity}kg`,\n        });\n      }\n    }\n  });\n  \n  mockTransfers\n    .filter(t => t.assetId === wineId && t.assetType === \"WineBatch\")\n    .sort((a,b) => new Date(a.requestDate).getTime() - new Date(b.requestDate).getTime())\n    .forEach(transfer => {\n      const fromUser = MOCK_USERS[transfer.fromRole]?.find(u => u.id === transfer.fromUserId);\n      const toUser = MOCK_USERS[transfer.toRole]?.find(u => u.id === transfer.toUserId);\n      trace.push({\n        timestamp: transfer.requestDate,\n        event: `Transferencia Iniciada: ${transfer.fromRole} a ${transfer.toRole}`,\n        actor: `${fromUser?.name || 'N/A'}`,\n        assetId: wineId,\n        details: `Hacia ${toUser?.name || 'N/A'}. Cantidad: ${transfer.quantity} botellas.`,\n      });\n      if (transfer.status === \"accepted\" && transfer.actionDate) {\n         trace.push({\n          timestamp: transfer.actionDate,\n          event: `Transferencia Aceptada`,\n          actor: `${transfer.toRole} - ${toUser?.name || transfer.toUserId}`,\n          assetId: wineId,\n        });\n      }\n    });\n\n  return trace.sort((a,b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/src/components/assets/RegisterGrapeLotForm.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport * as z from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport type { GrapeLot } from \"@/types\";\nimport { mockGrapeLots } from \"@/lib/mockData\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { PackagePlus } from \"lucide-react\";\n\nconst formSchema = z.object({\n  name: z.string().min(2, \"El nombre debe tener al menos 2 caracteres.\").max(100),\n  grapeVariety: z.string().min(2, \"La variedad debe tener al menos 2 caracteres.\").max(100),\n  parcelData: z.string().min(10, \"Los datos de la parcela deben tener al menos 10 caracteres.\").max(500),\n  inputsUsed: z.string().min(10, \"Los insumos deben tener al menos 10 caracteres.\").max(500),\n  imageUrl: z.string().url(\"Debe ser una URL válida.\").optional(),\n});\n\nexport function RegisterGrapeLotForm() {\n  const { currentUser } = useAuth();\n  const { toast } = useToast();\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: \"\",\n      grapeVariety: \"\",\n      parcelData: \"\",\n      inputsUsed: \"\",\n      imageUrl: \"\",\n    },\n  });\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    if (!currentUser) {\n      toast({ title: \"Error\", description: \"Usuario no autenticado.\", variant: \"destructive\" });\n      return;\n    }\n    \n    const newGrapeLot: GrapeLot = {\n      id: `GRAPE-${Date.now().toString().slice(-4)}`,\n      ...values,\n      viticultorId: currentUser.id,\n      harvestDate: new Date().toISOString(),\n      registrationDate: new Date().toISOString(),\n      imageUrl: values.imageUrl || `https://placehold.co/600x400.png?text=${encodeURIComponent(values.name)}`,\n    };\n\n    mockGrapeLots.push(newGrapeLot); \n    console.log(\"Nuevo Lote de Uva Registrado:\", newGrapeLot);\n    toast({\n      title: \"Cosecha Registrada\",\n      description: `El lote ${newGrapeLot.name} ha sido registrado exitosamente.`,\n    });\n    form.reset();\n  }\n\n  return (\n    <Card className=\"w-full max-w-2xl mx-auto shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"font-headline text-2xl flex items-center gap-2\">\n          <PackagePlus className=\"h-6 w-6 text-primary\" /> Registrar Nueva Cosecha de Uva\n        </CardTitle>\n        <CardDescription>Rellena los detalles del lote de uva que estás introduciendo en la cadena de suministro.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            <FormField\n              control={form.control}\n              name=\"name\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Nombre del Lote</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"Ej: Cosecha Malbec 2024 - Parcela 5\" {...field} />\n                  </FormControl>\n                  <FormDescription>El nombre o identificador para este lote de uva.</FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"grapeVariety\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Variedad de Uva</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"Ej: Malbec\" {...field} />\n                  </FormControl>\n                  <FormDescription>La variedad de uva de esta cosecha.</FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"parcelData\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Datos de la Parcela</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"Describe la ubicación y características de la parcela.\"\n                      className=\"resize-none\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormDescription>Información detallada sobre la parcela de origen.</FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <FormField\n              control={form.control}\n              name=\"inputsUsed\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Insumos Utilizados</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"Describe los fertilizantes, pesticidas y otros insumos utilizados.\"\n                      className=\"resize-none\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormDescription>Información sobre los tratamientos aplicados al cultivo.</FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n             <FormField\n              control={form.control}\n              name=\"imageUrl\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>URL de la Imagen (Opcional)</FormLabel>\n                  <FormControl>\n                    <Input type=\"url\" placeholder=\"https://example.com/image.png\" {...field} />\n                  </FormControl>\n                  <FormDescription>Un enlace a una imagen de la cosecha.</FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n            <Button type=\"submit\" className=\"w-full sm:w-auto\" disabled={form.formState.isSubmitting}>\n              {form.formState.isSubmitting ? \"Registrando...\" : \"Registrar Cosecha\"}\n            </Button>\n          </form>\n        </Form>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 954, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/app/%28app%29/assets/register-raw/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { RegisterGrapeLotForm } from \"@/components/assets/RegisterGrapeLotForm\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { Role } from \"@/types\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { AlertTriangle } from \"lucide-react\";\n\nexport default function RegisterGrapeLotPage() {\n  const { currentRole } = useAuth();\n\n  if (currentRole !== Role.Viticultor) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <Card className=\"w-full max-w-md text-center\">\n          <CardHeader>\n            <CardTitle className=\"font-headline text-2xl flex items-center justify-center gap-2\">\n                <AlertTriangle className=\"h-8 w-8 text-destructive\"/> Acceso Denegado\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p>Solo los Viticultores pueden registrar cosechas de uva.</p>\n            <p className=\"text-muted-foreground text-sm mt-2\">Tu rol actual es: {currentRole}</p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto py-8\">\n      <RegisterGrapeLotForm />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQe,SAAS;IACtB,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAE9B,IAAI,gBAAgB,qHAAA,CAAA,OAAI,CAAC,UAAU,EAAE;QACnC,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,gIAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,8OAAC,gIAAA,CAAA,aAAU;kCACT,cAAA,8OAAC,gIAAA,CAAA,YAAS;4BAAC,WAAU;;8CACjB,8OAAC,wNAAA,CAAA,gBAAa;oCAAC,WAAU;;;;;;gCAA4B;;;;;;;;;;;;kCAG3D,8OAAC,gIAAA,CAAA,cAAW;;0CACV,8OAAC;0CAAE;;;;;;0CACH,8OAAC;gCAAE,WAAU;;oCAAqC;oCAAmB;;;;;;;;;;;;;;;;;;;;;;;;IAK/E;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,oJAAA,CAAA,uBAAoB;;;;;;;;;;AAG3B","debugId":null}}]
}