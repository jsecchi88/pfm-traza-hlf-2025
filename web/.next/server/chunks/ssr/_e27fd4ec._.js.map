{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/src/lib/mockData.ts"],"sourcesContent":["\nimport { Role, type GrapeLot, type WineBatch, type Transfer } from '@/types';\nimport { faker } from '@faker-js/faker';\nimport { MOCK_USERS } from './constants';\n\nconst generateId = (prefix: string) => `${prefix}-${faker.string.alphanumeric(4).toUpperCase()}`;\n\nconst viticultores = MOCK_USERS[Role.Viticultor];\nconst bodegas = MOCK_USERS[Role.Bodega];\nconst distribuidores = MOCK_USERS[Role.Distribuidor];\nconst minoristas = MOCK_USERS[Role.Minorista];\nconst consumidores = MOCK_USERS[Role.Consumidor];\n\nexport const mockGrapeLots: GrapeLot[] = Array.from({ length: 5 }).map((_, i) => {\n  const viticultor = viticultores[i % viticultores.length];\n  const variety = faker.helpers.arrayElement(['Malbec', 'Cabernet Sauvignon', 'Chardonnay', 'Merlot']);\n  return {\n    id: generateId('GRAPE'),\n    name: `Cosecha ${variety} ${new Date().getFullYear()} - Lote ${i + 1}`,\n    grapeVariety: variety,\n    parcelData: `Parcela ${faker.number.int({ min: 1, max: 20 })}, Finca ${viticultor.name}`,\n    inputsUsed: `Riego por goteo, fertilizantes orgánicos.`,\n    viticultorId: viticultor.id,\n    harvestDate: faker.date.past().toISOString(),\n    registrationDate: new Date().toISOString(),\n    imageUrl: `https://placehold.co/600x400.png?text=${encodeURIComponent(`Uva ${variety}`)}`,\n  };\n});\n\nexport const mockWineBatches: WineBatch[] = [];\nexport const mockTransfers: Transfer[] = [];\n\n// Create transfers for Grapes from Viticultor to Bodega, and then create WineBatches\nmockGrapeLots.forEach((grapeLot, i) => {\n  if (i < 3) { // Only some lots get transferred and processed initially\n    const viticultor = viticultores.find(v => v.id === grapeLot.viticultorId);\n    const bodega = bodegas[i % bodegas.length];\n    if (viticultor && bodega) {\n      // 1. Transfer Grapes to Bodega\n      const grapeTransfer: Transfer = {\n        id: generateId('TR'),\n        assetId: grapeLot.id,\n        assetName: grapeLot.name,\n        assetType: \"GrapeLot\",\n        fromUserId: viticultor.id,\n        fromRole: Role.Viticultor,\n        toUserId: bodega.id,\n        toRole: Role.Bodega,\n        status: \"accepted\",\n        requestDate: faker.date.between({ from: grapeLot.harvestDate, to: new Date() }).toISOString(),\n        actionDate: new Date().toISOString(),\n        quantity: faker.number.int({ min: 500, max: 2000 }),\n      };\n      mockTransfers.push(grapeTransfer);\n\n      // 2. Bodega creates Wine from the Grapes\n      const wineBatch: WineBatch = {\n        id: generateId('WINE'),\n        name: `Reserva ${grapeLot.grapeVariety} ${new Date().getFullYear()}`,\n        grapeLotIds: [grapeLot.id],\n        bodegaId: bodega.id,\n        productionDetails: `Fermentado en tanques de acero inoxidable. Crianza de 12 meses en barricas de roble francés.`,\n        chemicalAnalysis: `pH: ${faker.number.float({ min: 3.2, max: 3.8, precision: 0.1 })}, Alcohol: ${faker.number.float({ min: 13.0, max: 14.5, precision: 0.1 })}%`,\n        bottlingDate: new Date().toISOString(),\n        registrationDate: new Date().toISOString(),\n        imageUrl: `https://placehold.co/600x400.png?text=${encodeURIComponent(`Vino ${grapeLot.grapeVariety}`)}`,\n      };\n      mockWineBatches.push(wineBatch);\n      \n      // 3. Transfer Wine from Bodega to Distribuidor\n      const distribuidor = distribuidores[i % distribuidores.length];\n      if (distribuidor) {\n          const wineTransfer: Transfer = {\n              id: generateId('TR'),\n              assetId: wineBatch.id,\n              assetName: wineBatch.name,\n              assetType: \"WineBatch\",\n              fromUserId: bodega.id,\n              fromRole: Role.Bodega,\n              toUserId: distribuidor.id,\n              toRole: Role.Distribuidor,\n              status: \"accepted\",\n              requestDate: new Date().toISOString(),\n              actionDate: new Date().toISOString(),\n              quantity: faker.number.int({ min: 100, max: 500 }),\n          };\n          mockTransfers.push(wineTransfer);\n\n          // 4. Transfer Wine from Distribuidor to Minorista\n          const minorista = minoristas[i % minoristas.length];\n          if(minorista){\n             const retailTransfer: Transfer = {\n                id: generateId('TR'),\n                assetId: wineBatch.id,\n                assetName: wineBatch.name,\n                assetType: \"WineBatch\",\n                fromUserId: distribuidor.id,\n                fromRole: Role.Distribuidor,\n                toUserId: minorista.id,\n                toRole: Role.Minorista,\n                status: \"accepted\",\n                requestDate: new Date().toISOString(),\n                actionDate: new Date().toISOString(),\n                quantity: faker.number.int({ min: 10, max: 50 }),\n            };\n            mockTransfers.push(retailTransfer);\n\n            // 5. \"Sell\" wine to a consumer\n            const consumidor = consumidores[i % consumidores.length];\n            if(consumidor){\n               const consumerSale: Transfer = {\n                  id: generateId('TR'),\n                  assetId: wineBatch.id,\n                  assetName: wineBatch.name,\n                  assetType: \"WineBatch\",\n                  fromUserId: minorista.id,\n                  fromRole: Role.Minorista,\n                  toUserId: consumidor.id,\n                  toRole: Role.Consumidor,\n                  status: \"accepted\",\n                  requestDate: new Date().toISOString(),\n                  actionDate: new Date().toISOString(),\n                  quantity: faker.number.int({min: 1, max: 3}),\n              };\n              mockTransfers.push(consumerSale);\n            }\n          }\n      }\n    }\n  }\n});\n\n\n// Helper function to get assets for a user\nexport const getAssetsForUser = (userId: string, role: Role): (GrapeLot | WineBatch)[] => {\n  switch (role) {\n    case Role.Viticultor:\n      return mockGrapeLots.filter(gl => gl.viticultorId === userId);\n    case Role.Bodega:\n      const bodegaWines = mockWineBatches.filter(wb => wb.bodegaId === userId);\n      const acceptedGrapeLotIds = mockTransfers\n        .filter(t => t.toUserId === userId && t.toRole === Role.Bodega && t.status === 'accepted' && t.assetType === 'GrapeLot')\n        .map(t => t.assetId);\n      const acceptedGrapeLots = mockGrapeLots.filter(gl => acceptedGrapeLotIds.includes(gl.id));\n      return [...bodegaWines, ...acceptedGrapeLots];\n    case Role.Distribuidor:\n    case Role.Minorista:\n      const acceptedWineIds = mockTransfers\n        .filter(t => t.toUserId === userId && t.toRole === role && t.status === 'accepted' && t.assetType === 'WineBatch')\n        .map(t => t.assetId);\n      return mockWineBatches.filter(wb => acceptedWineIds.includes(wb.id));\n    default:\n      return [];\n  }\n};\n\n// Helper function to get wine trace\nexport const getWineTrace = (wineId: string): import('@/types').WineTraceEvent[] => {\n  const trace: import('@/types').WineTraceEvent[] = [];\n  const wineBatch = mockWineBatches.find(p => p.id === wineId);\n\n  if (!wineBatch) return [];\n  \n  const bodega = MOCK_USERS[Role.Bodega].find(f => f.id === wineBatch.bodegaId);\n  trace.push({\n    timestamp: wineBatch.registrationDate,\n    event: \"Vino Registrado por Bodega\",\n    actor: `${Role.Bodega} - ${bodega?.name || wineBatch.bodegaId}`,\n    assetId: wineBatch.id,\n    details: `Vino: ${wineBatch.name}. Detalles: ${wineBatch.productionDetails}. Embotellado: ${new Date(wineBatch.bottlingDate).toLocaleDateString()}`,\n  });\n\n  wineBatch.grapeLotIds.forEach(glId => {\n    const grapeLot = mockGrapeLots.find(gl => gl.id === glId);\n    if (grapeLot) {\n      const viticultor = MOCK_USERS[Role.Viticultor].find(p => p.id === grapeLot.viticultorId);\n      trace.push({\n        timestamp: grapeLot.harvestDate,\n        event: \"Cosecha de Uva Registrada\",\n        actor: `${Role.Viticultor} - ${viticultor?.name || grapeLot.viticultorId}`,\n        assetId: glId,\n        details: `Lote: ${grapeLot.name}. Variedad: ${grapeLot.grapeVariety}. Parcela: ${grapeLot.parcelData}`,\n      });\n      \n      const grapeTransfer = mockTransfers.find(t => \n        t.assetId === glId && \n        t.toUserId === wineBatch.bodegaId &&\n        t.status === \"accepted\"\n      );\n      if (grapeTransfer) {\n        trace.push({\n          timestamp: grapeTransfer.actionDate || grapeTransfer.requestDate,\n          event: \"Lote de Uva Transferido a Bodega\",\n          actor: `De ${viticultor?.name} a ${bodega?.name}`,\n          assetId: glId,\n          details: `Cantidad: ${grapeTransfer.quantity}kg`,\n        });\n      }\n    }\n  });\n  \n  mockTransfers\n    .filter(t => t.assetId === wineId && t.assetType === \"WineBatch\")\n    .sort((a,b) => new Date(a.requestDate).getTime() - new Date(b.requestDate).getTime())\n    .forEach(transfer => {\n      const fromUser = MOCK_USERS[transfer.fromRole]?.find(u => u.id === transfer.fromUserId);\n      const toUser = MOCK_USERS[transfer.toRole]?.find(u => u.id === transfer.toUserId);\n      trace.push({\n        timestamp: transfer.requestDate,\n        event: `Transferencia Iniciada: ${transfer.fromRole} a ${transfer.toRole}`,\n        actor: `${fromUser?.name || 'N/A'}`,\n        assetId: wineId,\n        details: `Hacia ${toUser?.name || 'N/A'}. Cantidad: ${transfer.quantity} botellas.`,\n      });\n      if (transfer.status === \"accepted\" && transfer.actionDate) {\n         trace.push({\n          timestamp: transfer.actionDate,\n          event: `Transferencia Aceptada`,\n          actor: `${transfer.toRole} - ${toUser?.name || transfer.toUserId}`,\n          assetId: wineId,\n        });\n      }\n    });\n\n  return trace.sort((a,b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 337, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/app/%28app%29/dashboard/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useAuth } from '@/contexts/AuthContext';\nimport { Role, type Asset, type Transfer } from '@/types';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from '@/components/ui/button';\nimport Link from 'next/link';\nimport { mockWineBatches, mockGrapeLots, mockTransfers, getAssetsForUser } from '@/lib/mockData';\nimport { MOCK_USERS } from '@/lib/constants';\nimport React, { useEffect, useState } from 'react';\nimport { ArrowRightLeft, Package, PackagePlus, Search, Users, ListChecks, Eye, Leaf, Warehouse, Truck, ShieldCheck } from 'lucide-react';\nimport Image from 'next/image';\nimport { Badge } from '@/components/ui/badge';\nimport { format } from 'date-fns';\n\nconst StatCard = ({ title, value, icon: Icon, description }: { title: string, value: string | number, icon: React.ElementType, description?: string }) => (\n  <Card>\n    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n      <CardTitle className=\"text-sm font-medium\">{title}</CardTitle>\n      <Icon className=\"h-4 w-4 text-muted-foreground\" />\n    </CardHeader>\n    <CardContent>\n      <div className=\"text-2xl font-bold\">{value}</div>\n      {description && <p className=\"text-xs text-muted-foreground\">{description}</p>}\n    </CardContent>\n  </Card>\n);\n\nconst AssetListItem = ({ asset }: { asset: Asset }) => (\n  <li className=\"flex items-center justify-between py-3 border-b last:border-b-0\">\n    <div className=\"flex items-center gap-3\">\n      {asset.imageUrl && <Image data-ai-hint=\"product package\" src={asset.imageUrl} alt={asset.name} width={40} height={40} className=\"rounded-md object-cover\"/>}\n      <div>\n        <p className=\"font-medium\">{asset.name}</p>\n        <p className=\"text-sm text-muted-foreground\">ID: {asset.id}</p>\n      </div>\n    </div>\n    <Badge variant={'grapeVariety' in asset ? \"secondary\" : \"default\"}>\n      {'grapeVariety' in asset ? 'Lote de Uva' : 'Lote de Vino'}\n    </Badge>\n  </li>\n);\n\nconst TransferListItem = ({ transfer }: { transfer: Transfer }) => (\n   <li className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-2 py-3 border-b last:border-b-0\">\n    <div className=\"flex items-center gap-3\">\n      <ArrowRightLeft className=\"h-5 w-5 text-primary shrink-0\" />\n      <div>\n        <p className=\"font-medium\">\n          {transfer.assetName} ({transfer.assetType === \"GrapeLot\" ? \"Uva\" : \"Vino\"})\n        </p>\n        <p className=\"text-sm text-muted-foreground\">\n          De: {transfer.fromRole} ({MOCK_USERS[transfer.fromRole]?.find(u => u.id === transfer.fromUserId)?.name || 'N/A'})\n        </p>\n        <p className=\"text-sm text-muted-foreground\">\n          A: {transfer.toRole} ({MOCK_USERS[transfer.toRole]?.find(u => u.id === transfer.toUserId)?.name || 'N/A'})\n        </p>\n      </div>\n    </div>\n    <div className=\"flex flex-col items-end gap-1 self-end sm:self-center\">\n        <Badge variant={\n            transfer.status === 'accepted' ? 'default' :\n            transfer.status === 'rejected' ? 'destructive' : 'secondary'\n        } className=\"capitalize\">{transfer.status}</Badge>\n        <p className=\"text-xs text-muted-foreground\">{format(new Date(transfer.requestDate), \"PPp\")}</p>\n    </div>\n  </li>\n);\n\n\nexport default function DashboardPage() {\n  const { currentRole, currentUser } = useAuth();\n  const [userAssets, setUserAssets] = useState<Asset[]>([]);\n  const [userTransfers, setUserTransfers] = useState<Transfer[]>([]);\n\n  useEffect(() => {\n    if (currentUser) {\n      setUserAssets(getAssetsForUser(currentUser.id, currentRole));\n      const relatedTransfers = mockTransfers.filter(\n        t => t.fromUserId === currentUser.id || t.toUserId === currentUser.id\n      ).sort((a,b) => new Date(b.requestDate).getTime() - new Date(a.requestDate).getTime());\n      setUserTransfers(relatedTransfers);\n    }\n  }, [currentUser, currentRole]);\n\n  if (!currentUser) {\n    return <div className=\"p-4\">Cargando información de usuario...</div>;\n  }\n\n  const getRoleSpecificStats = () => {\n    switch (currentRole) {\n      case Role.Viticultor:\n        return [\n          { title: \"Lotes de Uva Registrados\", value: userAssets.length, icon: Leaf, description: \"Cosechas que has registrado.\" },\n          { title: \"Transferencias Salientes\", value: userTransfers.filter(t => t.fromUserId === currentUser.id).length, icon: ArrowRightLeft, description: \"Lotes enviados a bodegas.\" },\n        ];\n      case Role.Bodega:\n        return [\n          { title: \"Lotes de Vino Producidos\", value: userAssets.filter(a => 'grapeLotIds' in a).length, icon: Package, description: \"Vinos que has elaborado.\" },\n          { title: \"Cosechas Recibidas\", value: userTransfers.filter(t => t.toUserId === currentUser.id && t.assetType === 'GrapeLot' && t.status === 'accepted').length, icon: PackagePlus, description: \"Lotes de uva aceptados.\" },\n        ];\n      case Role.Distribuidor:\n        return [\n          { title: \"Inventario de Vino\", value: userAssets.length, icon: Warehouse, description: \"Lotes de vino en tu almacén.\" },\n          { title: \"Entregas a Minoristas\", value: userTransfers.filter(t => t.fromUserId === currentUser.id).length, icon: Truck, description: \"Envíos a puntos de venta.\" },\n        ];\n      case Role.Minorista:\n        return [\n          { title: \"Vino en Tienda\", value: userAssets.length, icon: Package, description: \"Botellas disponibles para la venta.\" },\n          { title: \"Ventas a Consumidores\", value: userTransfers.filter(t => t.fromUserId === currentUser.id && t.toRole === Role.Consumidor).length, icon: Users, description: \"Vinos vendidos.\" },\n        ];\n      case Role.Transportista:\n        return [\n            { title: \"Transferencias en Tránsito\", value: userTransfers.filter(t => t.status === \"in_transit\").length, icon: Truck, description: \"Envíos que estás gestionando.\" },\n        ];\n      case Role.Regulador:\n        return [\n            { title: \"Lotes Verificados\", value: 0, icon: ShieldCheck, description: \"Activos verificados por ti (funcionalidad TBD).\" },\n        ];\n      case Role.Consumidor:\n        return [\n           { title: \"Vinos Comprados\", value: userTransfers.filter(t => t.toUserId === currentUser.id && t.status === 'accepted').length, icon: Package, description: \"Vinos que has adquirido.\" },\n        ];\n      default:\n        return [];\n    }\n  };\n  \n  const quickActions = () => {\n    switch (currentRole) {\n      case Role.Viticultor:\n        return [ { label: \"Registrar Cosecha\", href: \"/assets/register-raw\", icon: PackagePlus }, { label: \"Crear Transferencia\", href: \"/transfers/create\", icon: ArrowRightLeft } ];\n      case Role.Bodega:\n        return [ { label: \"Registrar Vino\", href: \"/assets/register-product\", icon: PackagePlus }, { label: \"Crear Transferencia\", href: \"/transfers/create\", icon: ArrowRightLeft } ];\n      case Role.Distribuidor:\n      case Role.Minorista:\n        return [ { label: \"Crear Transferencia\", href: \"/transfers/create\", icon: ArrowRightLeft }, { label: \"Ver Inventario\", href: \"/assets/my-assets\", icon: Package } ];\n      case Role.Regulador:\n        return [ { label: \"Verificar Lote\", href: \"/certify\", icon: ShieldCheck } ];\n      case Role.Consumidor:\n        return [ { label: \"Trazar un Vino\", href: \"/trace\", icon: Search }, { label: \"Ver Mis Compras\", href: \"/transfers/view\", icon: Eye } ];\n      default:\n        return [];\n    }\n  };\n\n\n  return (\n    <div className=\"space-y-6\">\n      <Card className=\"shadow-lg\">\n        <CardHeader>\n          <CardTitle className=\"font-headline text-3xl\">¡Bienvenido, {currentUser.name} ({currentRole})!</CardTitle>\n          <CardDescription>Este es un resumen de tu actividad en la cadena de suministro.</CardDescription>\n        </CardHeader>\n      </Card>\n\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">\n        {getRoleSpecificStats().map(stat => <StatCard key={stat.title} {...stat} />)}\n      </div>\n      \n      {quickActions().length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"font-headline\">Acciones Rápidas</CardTitle>\n          </CardHeader>\n          <CardContent className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {quickActions().map(action => (\n              <Link key={action.label} href={action.href} passHref>\n                <Button variant=\"outline\" className=\"w-full justify-start text-left h-auto py-3\">\n                  <action.icon className=\"mr-3 h-5 w-5 text-primary\" />\n                  <span className=\"text-base\">{action.label}</span>\n                </Button>\n              </Link>\n            ))}\n          </CardContent>\n        </Card>\n      )}\n\n      {userAssets.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"font-headline\">Mis Lotes Recientes ({userAssets.length})</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <ul className=\"space-y-2\">\n              {userAssets.slice(0, 3).map(asset => <AssetListItem key={asset.id} asset={asset} />)}\n            </ul>\n            {userAssets.length > 3 && (\n              <Link href=\"/assets/my-assets\" passHref>\n                <Button variant=\"link\" className=\"mt-2 px-0\">Ver todos los lotes &rarr;</Button>\n              </Link>\n            )}\n          </CardContent>\n        </Card>\n      )}\n      \n      {userTransfers.length > 0 && (\n         <Card>\n          <CardHeader>\n            <CardTitle className=\"font-headline\">Transferencias Recientes ({userTransfers.length})</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <ul className=\"space-y-2\">\n              {userTransfers.slice(0,3).map(transfer => <TransferListItem key={transfer.id} transfer={transfer} />)}\n            </ul>\n             {userTransfers.length > 3 && (\n              <Link href=\"/transfers/view\" passHref>\n                <Button variant=\"link\" className=\"mt-2 px-0\">Ver todas las transferencias &rarr;</Button>\n              </Link>\n            )}\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}