{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/src/lib/mockData.ts"],"sourcesContent":["\nimport { Role, type GrapeLot, type WineBatch, type Transfer } from '@/types';\nimport { faker } from '@faker-js/faker';\nimport { MOCK_USERS } from './constants';\n\nconst generateId = (prefix: string) => `${prefix}-${faker.string.alphanumeric(4).toUpperCase()}`;\n\nconst viticultores = MOCK_USERS[Role.Viticultor];\nconst bodegas = MOCK_USERS[Role.Bodega];\nconst distribuidores = MOCK_USERS[Role.Distribuidor];\nconst minoristas = MOCK_USERS[Role.Minorista];\nconst consumidores = MOCK_USERS[Role.Consumidor];\n\nexport const mockGrapeLots: GrapeLot[] = Array.from({ length: 5 }).map((_, i) => {\n  const viticultor = viticultores[i % viticultores.length];\n  const variety = faker.helpers.arrayElement(['Malbec', 'Cabernet Sauvignon', 'Chardonnay', 'Merlot']);\n  return {\n    id: generateId('GRAPE'),\n    name: `Cosecha ${variety} ${new Date().getFullYear()} - Lote ${i + 1}`,\n    grapeVariety: variety,\n    parcelData: `Parcela ${faker.number.int({ min: 1, max: 20 })}, Finca ${viticultor.name}`,\n    inputsUsed: `Riego por goteo, fertilizantes orgánicos.`,\n    viticultorId: viticultor.id,\n    harvestDate: faker.date.past().toISOString(),\n    registrationDate: new Date().toISOString(),\n    imageUrl: `https://placehold.co/600x400.png?text=${encodeURIComponent(`Uva ${variety}`)}`,\n  };\n});\n\nexport const mockWineBatches: WineBatch[] = [];\nexport const mockTransfers: Transfer[] = [];\n\n// Create transfers for Grapes from Viticultor to Bodega, and then create WineBatches\nmockGrapeLots.forEach((grapeLot, i) => {\n  if (i < 3) { // Only some lots get transferred and processed initially\n    const viticultor = viticultores.find(v => v.id === grapeLot.viticultorId);\n    const bodega = bodegas[i % bodegas.length];\n    if (viticultor && bodega) {\n      // 1. Transfer Grapes to Bodega\n      const grapeTransfer: Transfer = {\n        id: generateId('TR'),\n        assetId: grapeLot.id,\n        assetName: grapeLot.name,\n        assetType: \"GrapeLot\",\n        fromUserId: viticultor.id,\n        fromRole: Role.Viticultor,\n        toUserId: bodega.id,\n        toRole: Role.Bodega,\n        status: \"accepted\",\n        requestDate: faker.date.between({ from: grapeLot.harvestDate, to: new Date() }).toISOString(),\n        actionDate: new Date().toISOString(),\n        quantity: faker.number.int({ min: 500, max: 2000 }),\n      };\n      mockTransfers.push(grapeTransfer);\n\n      // 2. Bodega creates Wine from the Grapes\n      const wineBatch: WineBatch = {\n        id: generateId('WINE'),\n        name: `Reserva ${grapeLot.grapeVariety} ${new Date().getFullYear()}`,\n        grapeLotIds: [grapeLot.id],\n        bodegaId: bodega.id,\n        productionDetails: `Fermentado en tanques de acero inoxidable. Crianza de 12 meses en barricas de roble francés.`,\n        chemicalAnalysis: `pH: ${faker.number.float({ min: 3.2, max: 3.8, precision: 0.1 })}, Alcohol: ${faker.number.float({ min: 13.0, max: 14.5, precision: 0.1 })}%`,\n        bottlingDate: new Date().toISOString(),\n        registrationDate: new Date().toISOString(),\n        imageUrl: `https://placehold.co/600x400.png?text=${encodeURIComponent(`Vino ${grapeLot.grapeVariety}`)}`,\n      };\n      mockWineBatches.push(wineBatch);\n      \n      // 3. Transfer Wine from Bodega to Distribuidor\n      const distribuidor = distribuidores[i % distribuidores.length];\n      if (distribuidor) {\n          const wineTransfer: Transfer = {\n              id: generateId('TR'),\n              assetId: wineBatch.id,\n              assetName: wineBatch.name,\n              assetType: \"WineBatch\",\n              fromUserId: bodega.id,\n              fromRole: Role.Bodega,\n              toUserId: distribuidor.id,\n              toRole: Role.Distribuidor,\n              status: \"accepted\",\n              requestDate: new Date().toISOString(),\n              actionDate: new Date().toISOString(),\n              quantity: faker.number.int({ min: 100, max: 500 }),\n          };\n          mockTransfers.push(wineTransfer);\n\n          // 4. Transfer Wine from Distribuidor to Minorista\n          const minorista = minoristas[i % minoristas.length];\n          if(minorista){\n             const retailTransfer: Transfer = {\n                id: generateId('TR'),\n                assetId: wineBatch.id,\n                assetName: wineBatch.name,\n                assetType: \"WineBatch\",\n                fromUserId: distribuidor.id,\n                fromRole: Role.Distribuidor,\n                toUserId: minorista.id,\n                toRole: Role.Minorista,\n                status: \"accepted\",\n                requestDate: new Date().toISOString(),\n                actionDate: new Date().toISOString(),\n                quantity: faker.number.int({ min: 10, max: 50 }),\n            };\n            mockTransfers.push(retailTransfer);\n\n            // 5. \"Sell\" wine to a consumer\n            const consumidor = consumidores[i % consumidores.length];\n            if(consumidor){\n               const consumerSale: Transfer = {\n                  id: generateId('TR'),\n                  assetId: wineBatch.id,\n                  assetName: wineBatch.name,\n                  assetType: \"WineBatch\",\n                  fromUserId: minorista.id,\n                  fromRole: Role.Minorista,\n                  toUserId: consumidor.id,\n                  toRole: Role.Consumidor,\n                  status: \"accepted\",\n                  requestDate: new Date().toISOString(),\n                  actionDate: new Date().toISOString(),\n                  quantity: faker.number.int({min: 1, max: 3}),\n              };\n              mockTransfers.push(consumerSale);\n            }\n          }\n      }\n    }\n  }\n});\n\n\n// Helper function to get assets for a user\nexport const getAssetsForUser = (userId: string, role: Role): (GrapeLot | WineBatch)[] => {\n  switch (role) {\n    case Role.Viticultor:\n      return mockGrapeLots.filter(gl => gl.viticultorId === userId);\n    case Role.Bodega:\n      const bodegaWines = mockWineBatches.filter(wb => wb.bodegaId === userId);\n      const acceptedGrapeLotIds = mockTransfers\n        .filter(t => t.toUserId === userId && t.toRole === Role.Bodega && t.status === 'accepted' && t.assetType === 'GrapeLot')\n        .map(t => t.assetId);\n      const acceptedGrapeLots = mockGrapeLots.filter(gl => acceptedGrapeLotIds.includes(gl.id));\n      return [...bodegaWines, ...acceptedGrapeLots];\n    case Role.Distribuidor:\n    case Role.Minorista:\n      const acceptedWineIds = mockTransfers\n        .filter(t => t.toUserId === userId && t.toRole === role && t.status === 'accepted' && t.assetType === 'WineBatch')\n        .map(t => t.assetId);\n      return mockWineBatches.filter(wb => acceptedWineIds.includes(wb.id));\n    default:\n      return [];\n  }\n};\n\n// Helper function to get wine trace\nexport const getWineTrace = (wineId: string): import('@/types').WineTraceEvent[] => {\n  const trace: import('@/types').WineTraceEvent[] = [];\n  const wineBatch = mockWineBatches.find(p => p.id === wineId);\n\n  if (!wineBatch) return [];\n  \n  const bodega = MOCK_USERS[Role.Bodega].find(f => f.id === wineBatch.bodegaId);\n  trace.push({\n    timestamp: wineBatch.registrationDate,\n    event: \"Vino Registrado por Bodega\",\n    actor: `${Role.Bodega} - ${bodega?.name || wineBatch.bodegaId}`,\n    assetId: wineBatch.id,\n    details: `Vino: ${wineBatch.name}. Detalles: ${wineBatch.productionDetails}. Embotellado: ${new Date(wineBatch.bottlingDate).toLocaleDateString()}`,\n  });\n\n  wineBatch.grapeLotIds.forEach(glId => {\n    const grapeLot = mockGrapeLots.find(gl => gl.id === glId);\n    if (grapeLot) {\n      const viticultor = MOCK_USERS[Role.Viticultor].find(p => p.id === grapeLot.viticultorId);\n      trace.push({\n        timestamp: grapeLot.harvestDate,\n        event: \"Cosecha de Uva Registrada\",\n        actor: `${Role.Viticultor} - ${viticultor?.name || grapeLot.viticultorId}`,\n        assetId: glId,\n        details: `Lote: ${grapeLot.name}. Variedad: ${grapeLot.grapeVariety}. Parcela: ${grapeLot.parcelData}`,\n      });\n      \n      const grapeTransfer = mockTransfers.find(t => \n        t.assetId === glId && \n        t.toUserId === wineBatch.bodegaId &&\n        t.status === \"accepted\"\n      );\n      if (grapeTransfer) {\n        trace.push({\n          timestamp: grapeTransfer.actionDate || grapeTransfer.requestDate,\n          event: \"Lote de Uva Transferido a Bodega\",\n          actor: `De ${viticultor?.name} a ${bodega?.name}`,\n          assetId: glId,\n          details: `Cantidad: ${grapeTransfer.quantity}kg`,\n        });\n      }\n    }\n  });\n  \n  mockTransfers\n    .filter(t => t.assetId === wineId && t.assetType === \"WineBatch\")\n    .sort((a,b) => new Date(a.requestDate).getTime() - new Date(b.requestDate).getTime())\n    .forEach(transfer => {\n      const fromUser = MOCK_USERS[transfer.fromRole]?.find(u => u.id === transfer.fromUserId);\n      const toUser = MOCK_USERS[transfer.toRole]?.find(u => u.id === transfer.toUserId);\n      trace.push({\n        timestamp: transfer.requestDate,\n        event: `Transferencia Iniciada: ${transfer.fromRole} a ${transfer.toRole}`,\n        actor: `${fromUser?.name || 'N/A'}`,\n        assetId: wineId,\n        details: `Hacia ${toUser?.name || 'N/A'}. Cantidad: ${transfer.quantity} botellas.`,\n      });\n      if (transfer.status === \"accepted\" && transfer.actionDate) {\n         trace.push({\n          timestamp: transfer.actionDate,\n          event: `Transferencia Aceptada`,\n          actor: `${transfer.toRole} - ${toUser?.name || transfer.toUserId}`,\n          assetId: wineId,\n        });\n      }\n    });\n\n  return trace.sort((a,b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 379, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,OAAO,gKAAA,CAAA,OAAkB;AAE/B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,OAAkB;QACjB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG,gKAAA,CAAA,OAAkB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uYACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW;AAE3D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,gKAAA,CAAA,UAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mIACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,gKAAA,CAAA,UAAqB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 432, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/src/components/transfers/TransferList.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useEffect } from 'react';\nimport { Role, type Transfer } from '@/types';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { mockTransfers } from '@/lib/mockData';\nimport { MOCK_USERS } from '@/lib/constants';\nimport { useToast } from '@/hooks/use-toast';\nimport { format } from 'date-fns';\nimport { CheckCircle2, XCircle, Clock3, ArrowRightLeft, User, Package, Leaf } from 'lucide-react';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\n\ninterface TransferListProps {\n  initialFilter?: \"all\" | \"incoming\" | \"outgoing\" | \"pending\" | \"completed\";\n}\n\nexport function TransferList({ initialFilter = \"all\" }: TransferListProps) {\n  const { currentUser, currentRole } = useAuth();\n  const { toast } = useToast();\n  const [transfers, setTransfers] = useState<Transfer[]>(mockTransfers);\n  const [activeTab, setActiveTab] = useState<string>(initialFilter);\n\n  const handleTransferAction = (transferId: string, newStatus: \"accepted\" | \"rejected\") => {\n    setTransfers(prevTransfers =>\n      prevTransfers.map(t =>\n        t.id === transferId ? { ...t, status: newStatus, actionDate: new Date().toISOString() } : t\n      )\n    );\n    const transferIndex = mockTransfers.findIndex(t => t.id === transferId);\n    if (transferIndex !== -1) {\n      mockTransfers[transferIndex] = { ...mockTransfers[transferIndex], status: newStatus, actionDate: new Date().toISOString() };\n    }\n\n    toast({\n      title: `Transferencia ${newStatus === 'accepted' ? 'Aceptada' : 'Rechazada'}`,\n      description: `La transferencia ID ${transferId} ha sido ${newStatus === 'accepted' ? 'aceptada' : 'rechazada'}.`,\n    });\n  };\n  \n  const getFilteredTransfers = () => {\n    if (!currentUser) return [];\n    \n    // Transportistas ven todas las transferencias activas para potencialmente gestionarlas.\n    if(currentRole === Role.Transportista) {\n        return transfers.filter(t => ['pending', 'in_transit', 'accepted'].includes(t.status))\n            .sort((a,b) => new Date(b.requestDate).getTime() - new Date(a.requestDate).getTime());\n    }\n\n    let filtered = transfers.filter(t => t.toUserId === currentUser.id || t.fromUserId === currentUser.id);\n\n    if (activeTab === \"incoming\") {\n      filtered = filtered.filter(t => t.toUserId === currentUser.id);\n    } else if (activeTab === \"outgoing\") {\n      filtered = filtered.filter(t => t.fromUserId === currentUser.id);\n    } else if (activeTab === \"pending\") {\n      filtered = filtered.filter(t => t.status === \"pending\");\n    } else if (activeTab === \"completed\") {\n      filtered = filtered.filter(t => [\"accepted\", \"rejected\"].includes(t.status));\n    }\n    return filtered.sort((a,b) => new Date(b.requestDate).getTime() - new Date(a.requestDate).getTime());\n  };\n\n  const displayedTransfers = getFilteredTransfers();\n\n  if (!currentUser) {\n    return <p>Cargando datos de usuario...</p>;\n  }\n  \n  const renderTransferItem = (transfer: Transfer) => {\n    const fromUser = MOCK_USERS[transfer.fromRole]?.find(u => u.id === transfer.fromUserId);\n    const toUser = MOCK_USERS[transfer.toRole]?.find(u => u.id === transfer.toUserId);\n    const isCurrentUserRecipient = transfer.toUserId === currentUser.id;\n    const canTakeAction = isCurrentUserRecipient && transfer.status === 'pending' && currentRole !== Role.Consumidor;\n\n    return (\n      <Card key={transfer.id} className=\"mb-4 shadow-md hover:shadow-lg transition-shadow duration-200\">\n        <CardHeader className=\"pb-3\">\n          <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center\">\n            <CardTitle className=\"font-headline text-lg flex items-center gap-2 mb-2 sm:mb-0\">\n              {transfer.assetType === \"GrapeLot\" ? <Leaf className=\"h-5 w-5 text-green-600\" /> : <Package className=\"h-5 w-5 text-blue-600\" />}\n              {transfer.assetName}\n            </CardTitle>\n            <Badge variant={\n                transfer.status === 'accepted' ? 'default' :\n                transfer.status === 'rejected' ? 'destructive' : 'secondary'\n            } className=\"capitalize text-xs\">\n              {transfer.status === 'pending' && <Clock3 className=\"mr-1 h-3 w-3\"/>}\n              {transfer.status === 'accepted' && <CheckCircle2 className=\"mr-1 h-3 w-3\"/>}\n              {transfer.status === 'rejected' && <XCircle className=\"mr-1 h-3 w-3\"/>}\n              {transfer.status}\n            </Badge>\n          </div>\n          <CardDescription className=\"text-xs\">ID: {transfer.id} | Cantidad: {transfer.quantity}</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-3 text-sm\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-muted-foreground\">\n              <User className=\"h-4 w-4\" />\n              <span>De: {fromUser?.name || transfer.fromRole}</span>\n            </div>\n            <ArrowRightLeft className=\"h-4 w-4 text-muted-foreground\"/>\n            <div className=\"flex items-center gap-2 text-muted-foreground\">\n              <User className=\"h-4 w-4\" />\n              <span>A: {toUser?.name || transfer.toRole}</span>\n            </div>\n          </div>\n          <p className=\"text-xs text-muted-foreground\">\n            Solicitado: {format(new Date(transfer.requestDate), \"PPp\")}\n            {transfer.actionDate && ` | Acción: ${format(new Date(transfer.actionDate), \"PPp\")}`}\n          </p>\n          {canTakeAction && (\n            <div className=\"flex gap-2 pt-2 border-t mt-3\">\n              <Button size=\"sm\" variant=\"default\" onClick={() => handleTransferAction(transfer.id, 'accepted')}>\n                <CheckCircle2 className=\"mr-2 h-4 w-4\" /> Aceptar\n              </Button>\n              <Button size=\"sm\" variant=\"destructive\" onClick={() => handleTransferAction(transfer.id, 'rejected')}>\n                <XCircle className=\"mr-2 h-4 w-4\" /> Rechazar\n              </Button>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n        <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-2 sm:grid-cols-3 md:grid-cols-5\">\n            <TabsTrigger value=\"all\">Todas</TabsTrigger>\n            <TabsTrigger value=\"incoming\">Entrantes</TabsTrigger>\n            <TabsTrigger value=\"outgoing\">Salientes</TabsTrigger>\n            <TabsTrigger value=\"pending\">Pendientes</TabsTrigger>\n            <TabsTrigger value=\"completed\">Completadas</TabsTrigger>\n          </TabsList>\n          \n          <TabsContent value={activeTab} className=\"mt-4\">\n             {displayedTransfers.length > 0 ? (\n                <div>{displayedTransfers.map(renderTransferItem)}</div>\n              ) : (\n                <div className=\"text-center py-10 text-muted-foreground\">\n                  <Package className=\"mx-auto h-12 w-12 mb-4\" />\n                  <p>No se encontraron transferencias para esta categoría.</p>\n                </div>\n              )}\n          </TabsContent>\n        </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 875, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web/app/%28app%29/transfers/view/page.tsx"],"sourcesContent":["\n\"use client\";\nimport { TransferList } from \"@/components/transfers/TransferList\";\nimport { Card, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { ArrowRightLeft } from \"lucide-react\";\nimport { useSearchParams } from 'next/navigation';\n\nexport default function ViewTransfersPage() {\n  const searchParams = useSearchParams();\n  const filter = searchParams.get('filter') as \"all\" | \"incoming\" | \"outgoing\" | \"pending\" | \"completed\" | null;\n\n  return (\n    <div className=\"space-y-6\">\n      <Card className=\"shadow-md\">\n        <CardHeader>\n          <CardTitle className=\"font-headline text-3xl flex items-center gap-2\">\n            <ArrowRightLeft className=\"h-8 w-8 text-primary\"/> Ver Transferencias\n          </CardTitle>\n          <CardDescription>\n            Revisa todas tus transferencias entrantes, salientes, pendientes y completadas.\n          </CardDescription>\n        </CardHeader>\n      </Card>\n      <TransferList initialFilter={filter || \"all\"} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAJA;;;;;;AAMe,SAAS;IACtB,MAAM,eAAe,CAAA,GAAA,kIAAA,CAAA,kBAAe,AAAD;IACnC,MAAM,SAAS,aAAa,GAAG,CAAC;IAEhC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,gIAAA,CAAA,OAAI;gBAAC,WAAU;0BACd,cAAA,8OAAC,gIAAA,CAAA,aAAU;;sCACT,8OAAC,gIAAA,CAAA,YAAS;4BAAC,WAAU;;8CACnB,8OAAC,8NAAA,CAAA,iBAAc;oCAAC,WAAU;;;;;;gCAAwB;;;;;;;sCAEpD,8OAAC,gIAAA,CAAA,kBAAe;sCAAC;;;;;;;;;;;;;;;;;0BAKrB,8OAAC,+IAAA,CAAA,eAAY;gBAAC,eAAe,UAAU;;;;;;;;;;;;AAG7C","debugId":null}}]
}