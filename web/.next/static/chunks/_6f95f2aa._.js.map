{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web2/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web2/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web2/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web2/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 402, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web2/src/ai/flows/supply-chain-analyzer.ts"],"sourcesContent":["\n// This file is machine-generated - edit with caution!\n'use server';\n/**\n * @fileOverview An AI-powered wine supply chain analyzer that identifies bottlenecks,\n * predicts disruptions, and suggests optimizations based on chaincode events\n * and registered asset data.\n *\n * - analyzeSupplyChain - A function that handles the supply chain analysis process.\n * - AnalyzeSupplyChainInput - The input type for the analyzeSupplyChain function.\n * - AnalyzeSupplyChainOutput - The return type for the analyzeSupplyChain function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst AnalyzeSupplyChainInputSchema = z.object({\n  chaincodeEvents: z\n    .string()\n    .describe(\n      'A string containing chaincode events data from the Hyperledger Fabric network for a wine supply chain.'\n    ),\n  assetData: z\n    .string()\n    .describe('A string containing registered asset data (Grape Lots, Wine Batches) from the system.'),\n});\nexport type AnalyzeSupplyChainInput = z.infer<typeof AnalyzeSupplyChainInputSchema>;\n\nconst AnalyzeSupplyChainOutputSchema = z.object({\n  bottlenecks: z\n    .string()\n    .describe('Identified bottlenecks in the wine supply chain.'),\n  disruptions: z\n    .string()\n    .describe('Predicted potential disruptions in the wine supply chain.'),\n  optimizations:\n    z.string().describe('Suggested optimizations for the wine supply chain.'),\n});\nexport type AnalyzeSupplyChainOutput = z.infer<typeof AnalyzeSupplyChainOutputSchema>;\n\nexport async function analyzeSupplyChain(\n  input: AnalyzeSupplyChainInput\n): Promise<AnalyzeSupplyChainOutput> {\n  return analyzeSupplyChainFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'supplyChainAnalyzerPrompt',\n  input: {schema: AnalyzeSupplyChainInputSchema},\n  output: {schema: AnalyzeSupplyChainOutputSchema},\n  prompt: `You are an AI-powered supply chain analyst specializing in the wine industry.\n\nYou will analyze the provided chaincode events and registered asset data to identify bottlenecks, predict potential disruptions, and suggest optimizations for the wine supply chain.\n\nChaincode Events:\n{{chaincodeEvents}}\n\nAsset Data:\n{{assetData}}\n\nBased on this information, provide a detailed analysis of the wine supply chain, including:\n\n1.  Identified Bottlenecks: Clearly describe any bottlenecks, such as delays in grape transfer, wine production, or distribution.\n2.  Predicted Disruptions: Forecast any potential disruptions, like climate affecting harvest or transport issues.\n3.  Suggested Optimizations: Offer actionable recommendations to improve the efficiency and resilience of the supply chain, such as alternative transport routes or inventory management strategies.\n\nEnsure that your analysis is clear, concise, and actionable, providing specific recommendations that can be implemented to enhance the wine supply chain's performance.\n`,\n});\n\nconst analyzeSupplyChainFlow = ai.defineFlow(\n  {\n    name: 'analyzeSupplyChainFlow',\n    inputSchema: AnalyzeSupplyChainInputSchema,\n    outputSchema: AnalyzeSupplyChainOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAwCsB,qBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web2/src/components/analyzer/SupplyChainAnalyzerClient.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from \"react\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport * as z from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { analyzeSupplyChain, type AnalyzeSupplyChainOutput } from \"@/ai/flows/supply-chain-analyzer\";\nimport { Loader2, Zap, AlertTriangleIcon, Lightbulb, BarChartBig } from \"lucide-react\";\n\nconst formSchema = z.object({\n  chaincodeEvents: z.string().min(10, \"Los eventos de chaincode deben tener al menos 10 caracteres.\"),\n  assetData: z.string().min(10, \"Los datos de activos deben tener al menos 10 caracteres.\"),\n});\n\nconst placeholderChaincodeEvents = `Ejemplo de Eventos (Vino):\nEvent: GrapeLotRegistered, AssetID: GRAPE-1A2B, Variety: Malbec, Timestamp: 2023-03-15T10:00:00Z\nEvent: TransferInitiated, AssetID: GRAPE-1A2B, From: Finca El Sol, To: Bodegas Mendoza, Timestamp: 2023-03-20T11:00:00Z\nEvent: TransferAccepted, AssetID: GRAPE-1A2B, By: Bodegas Mendoza, Timestamp: 2023-03-21T09:00:00Z\nEvent: WineBatchRegistered, InputAssetID: GRAPE-1A2B, OutputAssetID: WINE-3C4D, Name: Reserva Malbec, Timestamp: 2023-04-10T15:00:00Z\n...`;\n\nconst placeholderAssetData = `Ejemplo de Datos de Activos (Vino):\nAssetID: GRAPE-1A2B, Name: Cosecha Malbec 2023, Origin: Mendoza, Argentina\nAssetID: WINE-3C4D, Name: Reserva Malbec 2023, GrapeLots: [GRAPE-1A2B], Bodega: Bodegas Mendoza\n...`;\n\n\nexport function SupplyChainAnalyzerClient() {\n  const { toast } = useToast();\n  const [analysisResult, setAnalysisResult] = useState<AnalyzeSupplyChainOutput | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      chaincodeEvents: \"\",\n      assetData: \"\",\n    },\n  });\n\n  async function onSubmit(values: z.infer<typeof formSchema>) {\n    setIsLoading(true);\n    setAnalysisResult(null);\n    try {\n      const result = await analyzeSupplyChain(values);\n      setAnalysisResult(result);\n      toast({\n        title: \"Análisis Completo\",\n        description: \"El análisis de la cadena de suministro se ha generado correctamente.\",\n      });\n    } catch (error) {\n      console.error(\"Error en Análisis IA:\", error);\n      toast({\n        title: \"Falló el Análisis\",\n        description: \"Ocurrió un error al analizar la cadena de suministro. Por favor, inténtalo de nuevo.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <Form {...form}>\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n          <FormField\n            control={form.control}\n            name=\"chaincodeEvents\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel className=\"text-lg font-semibold\">Datos de Eventos de Chaincode</FormLabel>\n                <FormControl>\n                  <Textarea\n                    placeholder={placeholderChaincodeEvents}\n                    className=\"min-h-[150px] resize-y font-code text-sm\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormDescription>\n                  Pega los eventos de la red de Hyperledger Fabric.\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"assetData\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel className=\"text-lg font-semibold\">Datos de Lotes Registrados</FormLabel>\n                <FormControl>\n                  <Textarea\n                    placeholder={placeholderAssetData}\n                    className=\"min-h-[150px] resize-y font-code text-sm\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormDescription>\n                  Provee datos sobre los lotes de uva y vino registrados en el sistema.\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <Button type=\"submit\" className=\"w-full sm:w-auto text-base py-3 px-6\" disabled={isLoading}>\n            {isLoading ? (\n              <>\n                <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" /> Analizando...\n              </>\n            ) : (\n              <>\n                <Zap className=\"mr-2 h-5 w-5\" /> Analizar Cadena de Suministro\n              </>\n            )}\n          </Button>\n        </form>\n      </Form>\n\n      {isLoading && (\n         <div className=\"flex justify-center items-center py-10\">\n          <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n          <p className=\"ml-4 text-lg text-muted-foreground\">La IA está procesando tus datos...</p>\n        </div>\n      )}\n\n      {analysisResult && !isLoading && (\n        <div className=\"mt-10 space-y-6\">\n          <h2 className=\"font-headline text-2xl text-center mb-6 flex items-center justify-center gap-2\">\n             <BarChartBig className=\"h-7 w-7 text-primary\"/> Resultados del Análisis IA\n          </h2>\n          <Card className=\"border-yellow-500 shadow-lg\">\n            <CardHeader className=\"bg-yellow-50 text-yellow-800 rounded-t-lg\">\n              <CardTitle className=\"flex items-center gap-2 font-headline\">\n                <AlertTriangleIcon className=\"h-6 w-6 text-yellow-600\" /> Cuellos de Botella Identificados\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"pt-4\">\n              <p className=\"whitespace-pre-wrap\">{analysisResult.bottlenecks}</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"border-red-500 shadow-lg\">\n            <CardHeader className=\"bg-red-50 text-red-800 rounded-t-lg\">\n              <CardTitle className=\"flex items-center gap-2 font-headline\">\n                <Zap className=\"h-6 w-6 text-red-600\" /> Disrupciones Potenciales\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"pt-4\">\n              <p className=\"whitespace-pre-wrap\">{analysisResult.disruptions}</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"border-green-500 shadow-lg\">\n            <CardHeader className=\"bg-green-50 text-green-800 rounded-t-lg\">\n              <CardTitle className=\"flex items-center gap-2 font-headline\">\n                <Lightbulb className=\"h-6 w-6 text-green-600\" /> Optimizaciones Sugeridas\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"pt-4\">\n              <p className=\"whitespace-pre-wrap\">{analysisResult.optimizations}</p>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 871, "column": 0}, "map": {"version":3,"sources":["file:///Users/jona/Dev/pfm-traza-hlf-2025/web2/app/%28app%29/analyzer/page.tsx"],"sourcesContent":["\n\"use client\"; // This page uses client components\n\nimport { SupplyChainAnalyzerClient } from \"@/components/analyzer/SupplyChainAnalyzerClient\";\nimport { Card, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { BrainCircuit } from \"lucide-react\";\n\nexport default function AnalyzerPage() {\n  return (\n    <div className=\"space-y-6\">\n      <Card className=\"shadow-md\">\n        <CardHeader>\n          <CardTitle className=\"font-headline text-3xl flex items-center gap-2\">\n            <BrainCircuit className=\"h-8 w-8 text-primary\"/> Analizador IA de Cadena de Suministro\n          </CardTitle>\n          <CardDescription>\n            Usa la IA para identificar cuellos de botella, predecir disrupciones y sugerir optimizaciones basadas en los datos de tu cadena de suministro.\n          </CardDescription>\n        </CardHeader>\n      </Card>\n      <SupplyChainAnalyzerClient />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AAJA,cAAc,mCAAmC;;;;;AAMlC,SAAS;IACtB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,mIAAA,CAAA,OAAI;gBAAC,WAAU;0BACd,cAAA,6LAAC,mIAAA,CAAA,aAAU;;sCACT,6LAAC,mIAAA,CAAA,YAAS;4BAAC,WAAU;;8CACnB,6LAAC,yNAAA,CAAA,eAAY;oCAAC,WAAU;;;;;;gCAAwB;;;;;;;sCAElD,6LAAC,mIAAA,CAAA,kBAAe;sCAAC;;;;;;;;;;;;;;;;;0BAKrB,6LAAC,8JAAA,CAAA,4BAAyB;;;;;;;;;;;AAGhC;KAhBwB","debugId":null}}]
}